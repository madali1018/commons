/**
 * Created by madali on 2018/5/2.
 */
package com.common.designpattern.adapter;

//适配器模式

//适配器模式使用场景举例：
//        1.接口适配器  继承
//        接口中定义了三个方法，类只需实现一个，可以加一个抽象类实现这个接口（其他两个方法不实现，仅置空），
//        然后类再继承抽象类通过重写实现。这个抽象类就是适配器。
//        2.类适配器 继承
//        接口A中没有想要的方法，接口B中有，但不能改变访问接口A，可以定义一个适配器P，P实现了接口A，并且继承接口B的实现类BB，
//        这样类继承P，既可以使用A中已有的方法，也可以使用B中要使用的那个方法。
//        3.对象适配器  组合
//        接口A中没有想要的方法，接口B中有，但不能改变访问接口A，可以定义一个适配器P，P实现了接口A，在P中定义私有变量C(对象)，
//        再定义一个构造器为C赋值。再在A接口的方法实现中使用对象C调用其来自接口B的方法。